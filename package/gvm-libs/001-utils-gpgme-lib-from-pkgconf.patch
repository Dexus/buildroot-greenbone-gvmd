--- gvm-libs-v21.4.2/util/CMakeLists.txt	2021-08-03 13:50:41.000000000 +0200
+++ gvm-libs-v21.4.2.patched/util/CMakeLists.txt	2021-08-24 09:46:07.712012048 +0200
@@ -50,30 +50,9 @@
 # for fast XML we need libxml2
 pkg_check_modules (LIBXML2 REQUIRED libxml-2.0>=2.0)
 
-#for gpgmeutils we need libgpgme
-set (GPGME_MIN_VERSION "1.7.0")
-message (STATUS "Looking for gpgme...")
-find_library (GPGME gpgme)
-if (NOT GPGME)
-  message (SEND_ERROR "The gpgme library is required.")
-else (NOT GPGME)
-  execute_process (COMMAND gpgme-config --version
-    OUTPUT_VARIABLE GPGME_VERSION
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-  message (STATUS "Found gpgme: ${GPGME}, version ${GPGME_VERSION}")
-  if (GPGME_VERSION VERSION_LESS GPGME_MIN_VERSION)
-    message (SEND_ERROR "The gpgme library >= ${GPGME_MIN_VERSION} is required.")
-  else (GPGME_VERSION VERSION_LESS GPGME_MIN_VERSION)
-    execute_process (COMMAND gpgme-config --libs
-      OUTPUT_VARIABLE GPGME_LDFLAGS
-      OUTPUT_STRIP_TRAILING_WHITESPACE)
-    execute_process (COMMAND gpgme-config --cflags
-      OUTPUT_VARIABLE GPGME_CFLAGS
-      OUTPUT_STRIP_TRAILING_WHITESPACE)
-    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_FILE_OFFSET_BITS=64 -DLARGEFILE_SOURCE=1")
-    string(REPLACE "-I" "" GPGME_INCLUDE_DIRS "${GPGME_CFLAGS}")
-  endif (GPGME_VERSION VERSION_LESS GPGME_MIN_VERSION)
-endif (NOT GPGME)
+# gpgme
+pkg_check_modules (GPGME REQUIRED gpgme>=1.7.0)
+
 
 
 message (STATUS "Looking for libcrypt...")
